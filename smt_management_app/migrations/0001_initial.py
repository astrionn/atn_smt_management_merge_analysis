# Generated by Django 5.0.6 on 2025-07-09 11:42

import django.db.models.deletion
import smt_management_app.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Article",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                (
                    "manufacturer_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "provider1_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "provider2_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "provider3_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "provider4_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "provider5_description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "description",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("sap_number", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                (
                    "description",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="LocalFile",
            fields=[
                (
                    "name",
                    models.BigAutoField(primary_key=True, serialize=False, unique=True),
                ),
                (
                    "upload_type",
                    models.CharField(
                        choices=[
                            ("article", "Article"),
                            ("carrier", "Carrier"),
                            ("board", "Board"),
                        ],
                        max_length=50,
                    ),
                ),
                (
                    "file_object",
                    models.FileField(
                        upload_to=smt_management_app.models.LocalFile.get_upload_path
                    ),
                ),
                ("headers", models.CharField(blank=True, max_length=5000, null=True)),
                (
                    "board_name",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                (
                    "lot_number",
                    models.CharField(
                        blank=True, default=None, max_length=5000, null=True
                    ),
                ),
                (
                    "_delimiter",
                    models.CharField(
                        choices=[(",", 0), (";", 1), ("\t", 2)], max_length=2
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Machine",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                ("capacity", models.IntegerField()),
                ("location", models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                (
                    "name",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Provider",
            fields=[
                (
                    "name",
                    models.CharField(max_length=50, primary_key=True, serialize=False),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Storage",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                ("capacity", models.IntegerField()),
                ("location", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "device",
                    models.CharField(
                        choices=[
                            ("NeoLight", 0),
                            ("Sophia", 1),
                            ("ATNPTL", 2),
                            ("Dummy", 3),
                        ],
                        max_length=5000,
                    ),
                ),
                ("COM_address", models.CharField(blank=True, max_length=10, null=True)),
                ("ATNPTL_shelf_id", models.PositiveIntegerField(blank=True, null=True)),
                ("ip_address", models.CharField(blank=True, max_length=15, null=True)),
                ("ip_port", models.PositiveIntegerField(blank=True, null=True)),
                ("lighthouse_A_green", models.BooleanField(default=False)),
                ("lighthouse_A_yellow", models.BooleanField(default=False)),
                ("lighthouse_B_green", models.BooleanField(default=False)),
                ("lighthouse_B_yellow", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BoardArticle",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                ("count", models.PositiveIntegerField()),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smt_management_app.article",
                    ),
                ),
                (
                    "board",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smt_management_app.board",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="board",
            name="articles",
            field=models.ManyToManyField(
                through="smt_management_app.BoardArticle",
                to="smt_management_app.article",
            ),
        ),
        migrations.CreateModel(
            name="Carrier",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                ("diameter", models.IntegerField(blank=True, default=7, null=True)),
                ("width", models.IntegerField(blank=True, default=12, null=True)),
                (
                    "container_type",
                    models.IntegerField(
                        blank=True,
                        choices=[(0, "Reel"), (1, "Tray"), (2, "Bag"), (3, "Single")],
                        default=0,
                        null=True,
                    ),
                ),
                ("quantity_original", models.IntegerField(blank=True, null=True)),
                ("quantity_current", models.IntegerField(blank=True, null=True)),
                ("lot_number", models.CharField(blank=True, max_length=20, null=True)),
                ("reserved", models.BooleanField(default=False)),
                ("delivered", models.BooleanField(default=False)),
                ("collecting", models.BooleanField(default=False)),
                (
                    "storage_slot_qr_value",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                (
                    "article",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smt_management_app.article",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Job",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                (
                    "description",
                    models.CharField(blank=True, max_length=5000, null=True),
                ),
                ("project", models.CharField(blank=True, max_length=50, null=True)),
                ("customer", models.CharField(blank=True, max_length=50, null=True)),
                ("count", models.IntegerField()),
                ("start_at", models.DateTimeField(blank=True, null=True)),
                ("finish_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (0, "created"),
                            (1, "carriers_assigned"),
                            (2, "finished"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "board",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smt_management_app.board",
                    ),
                ),
                (
                    "carriers",
                    models.ManyToManyField(blank=True, to="smt_management_app.carrier"),
                ),
                (
                    "machine",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="smt_management_app.machine",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MachineSlot",
            fields=[
                (
                    "name",
                    models.CharField(
                        max_length=50, primary_key=True, serialize=False, unique=True
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("archived", models.BooleanField(default=False)),
                (
                    "machine",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smt_management_app.machine",
                    ),
                ),
            ],
            options={
                "ordering": ("name",),
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="carrier",
            name="machine_slot",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="smt_management_app.machineslot",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="manufacturer",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="smt_management_app.manufacturer",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="provider1",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider1",
                to="smt_management_app.provider",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="provider2",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider2",
                to="smt_management_app.provider",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="provider3",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider3",
                to="smt_management_app.provider",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="provider4",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider4",
                to="smt_management_app.provider",
            ),
        ),
        migrations.AddField(
            model_name="article",
            name="provider5",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider5",
                to="smt_management_app.provider",
            ),
        ),
        migrations.AddField(
            model_name="carrier",
            name="storage",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="smt_management_app.storage",
            ),
        ),
        migrations.CreateModel(
            name="StorageSlot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.PositiveIntegerField()),
                (
                    "led_state",
                    models.IntegerField(choices=[(0, "off"), (1, "on")], default=0),
                ),
                ("qr_value", models.CharField(blank=True, max_length=5000, null=True)),
                ("diameter", models.IntegerField(blank=True, default=7, null=True)),
                ("width", models.IntegerField(blank=True, default=12, null=True)),
                (
                    "storage",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="smt_management_app.storage",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="carrier",
            name="nominated_for_slot",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="nominated_carrier",
                related_query_name="nominated_carrier",
                to="smt_management_app.storageslot",
            ),
        ),
        migrations.AddField(
            model_name="carrier",
            name="storage_slot",
            field=models.OneToOneField(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="carrier",
                to="smt_management_app.storageslot",
            ),
        ),
        migrations.AddConstraint(
            model_name="carrier",
            constraint=models.CheckConstraint(
                check=models.Q(
                    ("storage_slot__isnull", True),
                    ("machine_slot__isnull", True),
                    _connector="OR",
                ),
                name="at_most_one_field_not_null",
            ),
        ),
    ]
